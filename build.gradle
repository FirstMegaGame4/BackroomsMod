plugins {
	id 'maven-publish'
	alias libs.plugins.quilt.loom
}

base {
	archivesName = project.archives_base_name
}

version = "$project.version+${libs.versions.minecraft.get()}"
group = project.maven_group

repositories {
	mavenCentral()
	maven {
		name = 'GeckoLib'
		url 'https://dl.cloudsmith.io/public/geckolib3/geckolib/maven/'
	}
	maven { url 'https://oss.sonatype.org/content/repositories/snapshots/' }
	repositories {
		maven {
			name 'Xander Maven'
			url 'https://maven.isxander.dev/releases'
		}
	}
	maven {
		name = 'ladysnake mods'
		url = 'https://ladysnake.jfrog.io/artifactory/mods'
		content {
			includeGroup 'io.github.ladysnake'
			includeGroupByRegex 'io\\.github\\.onyxstudios.*'
		}
	}
	maven {
		url 'https://api.modrinth.com/maven'
		content {
			includeGroup "maven.modrinth"
		}
	}

	maven {
		url "https://jitpack.io"
	}

	maven {
		name = 'TerraformersMC'
		url = 'https://maven.terraformersmc.com/releases/'
	}

}

allprojects {
	repositories {
		mavenCentral()
		maven {
			url "https://jitpack.io"
		}
	}
}

dependencies {
	minecraft libs.minecraft
	mappings variantOf(libs.yarn.mappings) { classifier 'v2' }

	modImplementation libs.quilt.loader

	modImplementation libs.quilted.fabric.api

	modImplementation libs.geckolib

	modImplementation (libs.yacl) {
		exclude group: 'com.terraformersmc'
	}

	modImplementation libs.ludocrypt.limlib

	include libs.ludocrypt.limlib

	modRuntimeOnly libs.modmenu
}

project.configurations.all {
	exclude(group: "net.fabricmc", module: "fabric-loader")
	exclude(group: "net.fabricmc.fabric-api")
}

loom {
	runs {
		client {
			vmArg("-Dgeckolib.disable_examples=true")
		}
	}
}

processResources {
	inputs.property 'version', version

	filesMatching('quilt.mod.json') {
		expand 'version': version
	}
}

tasks.withType(JavaCompile).configureEach {
	it.options.encoding = 'UTF-8'
	// Minecraft 1.18 (1.18-pre2) upwards uses Java 17.
	it.options.release = 17
}

java {
	// Still required by IDEs such as Eclipse and Visual Studio Code
	sourceCompatibility = JavaVersion.VERSION_17
	targetCompatibility = JavaVersion.VERSION_17

	// Loom will automatically attach sourcesJar to a RemapSourcesJar task and to the "build" task if it is present.
	// If you remove this line, sources will not be generated.
	withSourcesJar()

	// If this mod is going to be a library, then it should also generate Javadocs in order to aid with development.
	// Uncomment this line to generate them.
	// withJavadocJar()
}

// If you plan to use a different file for the license, don't forget to change the file name here!
jar {
	from('LICENSE') {
		rename { "${it}_${base.archivesName.get()}" }
	}
}

// configure the maven publication
publishing {
	publications {
		mavenJava(MavenPublication) {
			from components.java
		}
	}

	// See https://docs.gradle.org/current/userguide/publishing_maven.html for information on how to set up publishing.
	repositories {

	}
}